<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="team">

    <select id="selectTeamName" resultType="Project.pro.gg.Model.TeamDTO">
        select *
        from team
        where teamName = #{teamName}
    </select>

    <select id="selectTeamList" resultType="Map">
        select * from team
    </select>

    <select id="insertTeamData">
        insert into team(teamName, week_input, startTime, endTime, tier_limit, team_description, captinName, top)
        values(#{teamName}, #{week_input}, #{startTime}, #{endTime}, #{tier_limit}, #{team_description}, #{captinName}, #{top})
    </select>

    <select id="selectTeamApply_Join" parameterType="String" resultType="Project.pro.gg.Model.TeamApplyDTO">
        select summoner.summoner_name, ranked_solo.tier, ranked_solo.tier_rank, ranked_solo.rate
        from member inner join summoner
        on member.userid = summoner.userid inner join ranked_solo
        on summoner.id = ranked_solo.id
        where nickname = #{nickname};
    </select>

    <select id="selectTierValue" resultType="int">
        ${sql}
    </select>
    
    <select id="selectTier" resultType="String">
    	${sql}
    </select>

    <select id="insertApply" parameterType="Project.pro.gg.Model.TeamApplyDTO">
        insert into teamapply(nickname, summoner_name, line, tier, tier_rank, rate, teamName)
        values(#{nickname}, #{summoner_name}, #{line}, #{tier}, #{tier_rank}, #{rate}, #{teamName})
    </select>

    <select id="selectLine" resultType="String">
        select ${line} from team
        where teamName = #{teamName}
    </select>

    <select id="selectApplyMember" parameterType="String" resultType="Map">
        select * from teamapply
        where teamName = #{teamName}
    </select>

    <select id="selectApplyStatus" parameterType="String" resultType="Project.pro.gg.Model.TeamApplyDTO">
        select * from teamapply
        where nickname = #{nickname}
    </select>

    <select id="deleteApplyMember">
        delete from teamapply
        where nickname=#{nickname} and teamName=#{teamName}
    </select>

    <select id="deleteTeam" parameterType="Project.pro.gg.Model.TeamDTO">
        delete from team where teamName = #{teamName}
    </select>

    <select id="updateTeamLine" parameterType="Project.pro.gg.Model.TeamApplyDTO">
        update team
        set ${line} = #{nickname}
        where teamName = #{teamName}
    </select>
    
    <select id="updateTeam" parameterType="Project.pro.gg.Model.TeamDTO">
        update team
        set top = #{top},
            middle = #{middle},
            jungle = #{jungle},
            bottom = #{bottom},
            suppoter = #{suppoter}
        where teamName = #{teamName}
    </select>
    
    <select id="updateTierAvg" parameterType="Project.pro.gg.Model.TeamDTO">
    	UPDATE team
		SET tier_average = #{tier_average}
		WHERE teamName = #{teamName}
    </select>
    
    <select id="selectMatchList" parameterType="HashMap" resultType="Map">
    	SELECT * FROM team INNER JOIN tiervalue ON team.tier_average = tiervalue.tier_value WHERE tier_average BETWEEN #{startIdx} AND #{endIdx}
    </select>

    <select id="selectDynamicSearch" parameterType="Project.pro.gg.Model.TeamDTO" resultType="Map">
        select * from team
        <choose>
            <when test="teamName != null and tier_limit == null and line == null">
                where teamName = #{teamName}
            </when>
            <when test="teamName == null and tier_limit != null and line == null">
                where tier_limit = #{tier_limit}
            </when>
            <when test="teamName == null and tier_limit == null and line != null">
                where ${line} is null
            </when>
            <when test="teamName != null and tier_limit != null and line == null">
                where teamName = #{teamName} and tier_limit = #{tier_limit}
            </when>
            <when test="teamName != null and tier_limit == null and line != null">
                where teamName = #{teamName} and ${line} is null
            </when>
            <when test="teamName == null and tier_limit != null and line != null">
                where tier_limit = #{tier_limit} and ${line} is null
            </when>
            <when test="teamName != null and tier_limit != null and line != null">
                where teamName = #{teamName} and tier_limit = #{tier_limit} and ${line} is null
            </when>
            <otherwise>
                where teamName = ''
            </otherwise>
        </choose>
    </select>

    <select id="selectDynamicSearch_Crew" parameterType="Project.pro.gg.Model.RankedSoloDTO" resultType="Map">
        select * from ranked_solo
        <choose>
            <when test="tier != null and tier_rank != null and rateRank == null ">
                where tier = #{tier} and tier_rank = #{tier_rank}
            </when>
            <when test="tier == null and tier_rank == null and rateRank != null">
                <if test="rateRank == 'Erank'">
                    where rate between 0.0 and 20.0
                </if>
                <if test="rateRank == 'Drank'">
                    where rate between 20 and 40
                </if>
                <if test="rateRank == 'Crank'">
                    where rate between 40 and 60
                </if>
                <if test="rateRank == 'Brank'">
                    where rate between 60 and 80
                </if>
                <if test="rateRank == 'Arank'">
                    where rate between 80 and 100
                </if>
            </when>
            <when test="tier != null and tier_rank != null and rateRank != null">
                where tier = #{tier} and tier_rank = #{tier_rank} and
                <if test="rateRank == 'Erank'">
                    rate between 0 and 20
                </if>
                <if test="rateRank == 'Drank'">
                    rate between 20 and 40
                </if>
                <if test="rateRank == 'Crank'">
                    rate between 40 and 60
                </if>
                <if test="rateRank == 'Brank'">
                    rate between 60 and 80
                </if>
                <if test="rateRank == 'Arank'">
                    rate between 80 and 100
                </if>
            </when>
            <otherwise>
                where id = ''
            </otherwise>
        </choose>
    </select>
</mapper>